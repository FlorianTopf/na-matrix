DOXYGEN:
http://europlanet-na1.oeaw.ac.at/matrix/docs/doxygen/index.html
  * Doxygen Information for new library classes etc.

FORMAT CONVENTIONS:
https://docs.google.com/document/d/1hvVi8se0xMOc3KD9RsDJJR7J5fPUwaEN0b9Xt/edit?hl=en_US
  [OK] tooltip info for observatories (not needed for space missions)
  [PENDING] add conventions for space missions

-----------------------------------------------------------------
NA1 QUESTIONNAIRE RELATED FUNCTIONALITY
-----------------------------------------------------------------

[URGENT] Rethink ACL and SECURITY CONCEPT (ACL, INDEX, CONTROLLER) => parts are models!
		 Only I will have 31 in the future (Manuel and Joanna will have 21)
[URGENT] IMPROVE ACL AND ACCESS SCRIPTS FOR LOADER OF OLD NA1 ENTRIES
[URGENT] Improve complete controller procedure and flags!


[HIGH PRIORITY] 
Introduce Questionnaire form (entries must be approved afterwards) (see above)
 [OK] very user friendly! tooltips necessary (UI)
 [PENDING] Tooltips are not duplicated (at telescopes and instruments)

[URGENT] OBS_QUESTIONNAIRE:

1 DB Solution:
 [OK] add a way to register anonymous as user level 11 only (REFACTOR REGISTRATION & LOGIN)
 [OK] add pages/registration_q.php (alter user_level selector!!!)
 [OK] add registration_q to lib/php/orm/Acl.php list, user_level 0
 [OK] alter add to user_level 11
 [OK] alter index.php to show registration_q to user_level 0.   [OK] index.php MUST NOT show edit/ 
   	  add_old_entry for user_level < 21!
 [OK] add 'approved' [bool] & 'user_id' [int] field to 'observatories' (set already existing entries to  
   	  1, user_id=admin)
 [OK] alter every INSERT/UPDATE SQL statement to 'observatories' table! (models/Observatory.php 
   	  add_resource() & update_resource)
 [OK] add/update resource sets 'approved' to 1 only when user_level > 11! (models/Observatory.php 
   	  add_resource() & update_resource)
 [OK] approved flag in edit list, add APPROVE button for admin users in EDIT mode
 [OK] prevent approved = 0 entries from beeing displayed (models/Observatory.php - get_all_resources())
 [OK] added 'WHERE observatories.approved = 1' to lib/observatoriesXML.php Map query
 [OK] MY ENTRIES edit for users (only with their entries).
 [OK] TO BE APPROVED menu for admins.
 [OK] implement E-Mail notification for adding questionnaire entries (improve this!)
 [OK] Uncomment code (Implement Questionnaire (Approve/Unapprove))
 
[MEDIUM PRIORITY] E-Mail functionality for ADD / EDIT notification
  [OK] ADD notification (by users)
  * add_obs/spa_keys => for EDIT notification as array 
    (we need to improve update process of telescopes and instruments)

[MEDIUM PRIORITY] E-Mail functionality for thrown ERROR (make a function)
  * summary of thrown error
  * set_message in models / show_message in controller! 
    (especially in add_obs/spa_keys) => status array

-----------------------------------------------------------------
ROADMAP FOR TECHNICAL / SCIENTIFIC IMPROVEMENTS
-----------------------------------------------------------------
  
[OK] Finalize RESEARCH AREAS / TARGETS / SCIENCE GOALS
[OK] review targets and fix issues!
[OK] introduce research area domain in database
[PENDING] introduce brief description for research areas
[OK] Modify existing entries in running Matrix
[OK] take care of describing old research areas / science goals with new research areas / targets
[OK] replace old research areas with new research areas AND targets!
[OK] Implement load & add Old UCL entries functionality
[MED PRIORITY] Add entries from old Matrix (OBS) => check if they are existing!
[LOW PRIORITY] Add entries from old Matrix (SPA) => check if they are existing!
  (Support from old excel sheets)

[LOW PRIORITY]
  [OK] Develop Strategy for UPDATE Entry procedure (JUNE 2011)
  [PENDING] Implement Edit link button on browse site for admins
  [PENDING] Implement delete_resource() in spacemission model (implement delete button for admins)

-----------------------------------------------------------------
DATABASE MANAGEMENT
-----------------------------------------------------------------

[HIGH PRIORITY] 
  * Lock observatory / space mission main table when ADD or EDIT is active.
  * Don't forget to unlock again (alles im controller machen)

* Running Database
  [PENDING] Remove Science Goals
  [OK] Remove City and ZIP Code

* Development Database
  [OK] improve hidden fields / additional information (remove not necessary)
  [NO] remove OTHER from Telescope Types / Instrument Types?
  [OK] add OTHER to Antenna Types?
  * introduce JOINS where necessary and usable

-----------------------------------------------------------------
INPUT FORMS / ADD EDIT PROCEDURE / VIEW PAGES
-----------------------------------------------------------------

* Input form for observatories
  * add other targets (db functionality)
  [OK] remove last telescope => empty fields
  [OK] remove last instrument => empty fields
  [OK] PARTNER OBSERVATORIES => make intelligent linkage! (e.g. autocompleter)

* Input validation in JQUERY for observatories (see comments in add.php)
  * other target - MANDATORY!
  [OK] telescope name - MANDATORY!
  [OK] telescope type - MANDATORY!
  [OK] instrument name - MANDATORY => not atm!
  [OK] instrument type - MANDATORY => not atm!
  [OK] check for type of values (critical review)!


* Input form for space missions
  * add other targets (db functionality)
  * sensor type? => dropdown from PDAP types? -> extensible?
  * field of view, resolution, measured => format?
  * range_begin, range_end => high precision float?
  * remove last sensor => empty fields
  * autocompleter for sensor type
  * check for type of values (critical review)!

* Input validation in JQUERY for space missions (see comments in add.php)
  * other target - MANDATORY!
  * sensor name - MANDATORY (array => THIS IS AN OPEN ISSUE!)
  * science goals are MANDATORY! (required)
  * validation for sensor web_address (URL)
  * check for type of values (critical review)!


* ALL INPUT FORMS:
  * Add validation for existing names for all ADD OTHER
  * Implement brief description for research areas (see above)

** All EDIT PAGES
  [OK] add name filter for faster finding

** All BROWSE/VIEW PAGES
  [OK] Check if some fields are still listed, even if there is no information
    given
  [PENDING] Check if there is an URL in the info, and make a hyperlink
  [PENDING] Generate link list to other observatories in "partner observatories"
  [PENDING] Check all units and descriptions (like they are in the input form)
  
    
[HIGH PRIORITY] Implement Search Interface / Interactive Map (SEPTEMBER 2011)
	 See: http://code.google.com/intl/de/apis/maps/articles/phpsqlajax_v3.html
  [OK] display current user location
  [OK] Distinguish between RADIO/OPTICAL, discuss Information to be displayed in Info box
   * HIDDEN FIELDS OK? (latitude/longitude)
  [OK] Integrate link to observatory view (with openwin) in google maps info box
  [OK] Take care of NOT existing latitude/longitude
  [OK] Improve Icons
   * SEARCH IN THE MAPS, discuss filters/searchtools to be implemented
     See: http://code.google.com/intl/de/apis/maps/articles/phpsqlsearch_v3.html

-----------------------------------------------------------------
SOURCE CODE MAINTENANCE AND IMPROVEMENTS
-----------------------------------------------------------------

BEWARE FOR DUPLICATE FUNCTION/MEMBER/METHOD NAMES TO EPN FRAMEWORK (just to be on the safe side)
  * Watch out for MODEL functionality and TABLEFIELD class

[LOW PRIORITY]
* COMMENT OUT CODE FOR QUESTIONNAIRE (ATM)
  * revision 435 changed files: models / pages / views
  * critical check with revision 430 (manual merges were done)
* CODING STANDARD!
  * removed comments in VIEWS (revision 391)

* HTML 4.01 transitional => XHTML 1.0 strict conversion with validator
	=> target NOT allowed => use JS
	=> HTMLENTITIES < >
	=> table oder ul ist nicht ohne tr bzw. li erlaubt
	=> div inline definition ist nicht erlaubt (divs for ps)
	=> [] in input names are not allowed!
* CSS 2.1 validation (refactor css, original rev384, rev393)
	=> define standard paragraph (p)
	=> Z-INDEX gelöscht (siehe typo3)

[PENDING] Put FIREFOX/JS recommendation in footer
  [OK] MODEL has to be proof if javascript is OFF (check with browser)

[LOW PRIORITY] Refactor all Javascript in functions.js
  * dynamic row adding routines (redundancy)
  * refactor the double hidden_fields in createUpdate (Sensors)
  * maybe use -- again in remove fields
  * style of validation and locations (NEW VALIDATE VERSION!)

[LOW PRIORITY] Refactor classes in observatory.php, spacemission.php
  * MVC Pattern implementieren
    * VIEWS (all access through DAO) / CONTROLLER (frontcontroller)
  * ORM Pattern implementieren für die models
  	* DAO / Object => abstract base class (singleton)
